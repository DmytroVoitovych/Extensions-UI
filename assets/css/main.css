@import "./reset.css";
@import "./variable.css";
@import "./reuse.css";
@import "./typography.css";

html {
  background-image: var(--gradient-bg);
  background-attachment: fixed;
  background-size: cover;
  -webkit-overflow-scrolling: touch;
  overflow-y: hidden;
  overscroll-behavior: none;
  min-height: 100lvh;

 
}

html:not(.dark) {
  header {
    border: 1px solid var(--bor-main);
    box-shadow: 0 2px 3px 0 #d9e5f4;
  }

  nav > a:not(.activeLink) {
    box-shadow: 0 1px 2px 0 rgba(184, 196, 215, 0.4);
  }

  .extensionItem {
    box-shadow: 0 1px 5px 1px rgba(194, 206, 225, 0.22),
      0 2px 2px 0 rgba(194, 206, 225, 0.2);
  }
}

body {
  font-family: "Noto Sans", sans-serif;
  font-size: 16px;
  line-height: 1.5;
  height: 100%;
  
  
  scrollbar-gutter: stable;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: none;
  
}

.wrapper {
  padding: 24px 16px;
  max-width: 512px;
  height: 100dvh;
  margin: 0 auto;
  background-image: var(--gradient-bg);
  background-attachment: fixed;
  background-size: cover;

  

  @media screen and (min-width: 512px) {
    max-width: 1200px;
  }
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 12px;
  border-radius: 10px;
  background-color: var(--bg-block);
  color: var(--txt-logo);
  position: relative;

  .extansionLogo {
    font-family: "Geologica", sans-serif;
    font-size: 24px;
    font-weight: 600;
    line-height: 1.3;
    letter-spacing: -0.5px;
    display: flex;
    align-items: center;
    gap: 12px;

    & > .icon {
      width: 40px;
      height: 41px;
    }
  }

  & > label {
    position: relative;
    cursor: pointer;
    width: 50px;
    height: 50px;
    background-color: var(--bg-theme-switcher);
    border-radius: 12px;
    transition: background-color 250ms ease-in-out;

    @media (hover: hover) {
      &:hover {
        cursor: pointer;
        background-color: var(--bg-hover);
      }
    }

    &:has(input:focus-visible) {
      outline: 2px solid var(--bg-active);
      outline-offset: 2px;
    }
  }

  & > label::before {
    content: "";
    width: 22px;
    height: 22px;
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    border-radius: 6px;
    background-image: var(--theme-img);
    background-repeat: no-repeat;
    background-position: center;
  }

  & > label > input {
    opacity: 0;
  }
}

#realDataSwitcher {
  position: absolute;
  display: flex;
  align-items: center;
  gap: 8px;
  top: calc(100% + 8px);
  left: 0;

  &::before {
    content: "Fake data";
  }

  &:not(:has(input:checked)):before {
    text-decoration: underline;
    text-decoration-color: var(--bg-active);
  }

  &::after {
    content: "Real data";
  }

  &:has(input:checked):after {
    text-decoration: underline;
    text-decoration-color: var(--bg-active);
  }

  label:has(input:checked) {
    background-color: var(--bg-border-chackbox);

    input {
      transform: translateX(100%);
    }
  }

  label {
    display: flex;
    width: 36px;
    border-radius: 999px;
    background-color: var(--bg-border-main);
    transition: background-color 250ms ease-in-out;
    cursor: pointer;
    position: relative;

    &:has(input:focus-visible) {
      outline: 2px solid var(--bg-active);
      outline-offset: 2px;
    }
  }

  input {
    width: 16px;
    height: 16px;
    appearance: none;
    border-radius: 9999px;
    background-color: var(--neutral-0);
    margin: 2px;
    transform: translateX(0px);
    transition: transform 250ms ease-in-out;
    cursor: pointer;
  }
}

main {
  display: flex;
  flex-direction: column;
  gap: 40px;
  padding-top: 40px;
  padding-bottom: 64px;
  container-type: inline-size;
}

.tabBlock {
  display: flex;
  flex-direction: column;
  gap: 24px;
  align-items: center;

  @container (min-width: calc((342.9px * 2) + 12px)) {
    flex-direction: unset;
    justify-content: space-between;
  }

  h1 {
    color: var(--txt-cl-title);
  }

  nav {
    display: flex;
    gap: 12px;
    color: var(--txt-cl-title);
  }

  nav > a {
    padding: 8px 20px 10px 20px;
    border-radius: 999px;
    background-color: var(--bg-link);
    transition: background-color 250ms ease-in-out;

    &:focus-visible {
      outline: 2px solid var(--bg-active);
      outline-offset: 2px;
    }
  }

  nav > a:not(.activeLink) {
    border: 1px solid var(--bor-tab);

    @media (hover: hover) {
      &:hover {
        background-color: var(--bg-hover);
      }
    }

    &:focus-visible {
      background-color: var(--bg-hover);
    }
  }

  nav > a.activeLink {
    background-color: var(--bg-active);
    color: var(--txt-active);
  }
}

/*tab operations*/
.tabBlock:has(a[href="#active"].activeLink)
  ~ .extensionsList:not(:has([aria-checked="true"]))
  + .emptyState {
  display: block;
  text-align: center;
}

.tabBlock:has(a[href="#inactive"].activeLink)
  ~ .extensionsList:not(:has([aria-checked="false"]))
  + .emptyState {
  display: block;
  text-align: center;
}

.tabBlock:not(:has(a[href="#*"].activeLink))
  ~ .extensionsList
  li:not(.removeAnimation) {
  opacity: 1;
  scale: 1;
  transition: scale 250ms ease-in-out, opacity 250ms ease-in-out;

  @starting-style {
    opacity: 0;
    scale: 0.1;
  }
}

.tabBlock:has(a[href="#active"].activeLink)
  ~ .extensionsList
  li:has(input:not(:checked)) {
  display: none;
  opacity: 0;
  scale: 0.1;
  transition: scale 250ms ease-in-out 250ms, opacity 250ms ease-in-out 250ms,
    display 250ms allow-discrete 250ms;

  @supports (-moz-user-select: none) {
    display: grid;

    &:has([aria-checked="false"]) {
      display: none;
    }

    &.removeAnimation {
      display: none;
    }
  }

  @starting-style {
    opacity: 1;
    scale: 1;
  }
}

.tabBlock:has(a[href="#inactive"].activeLink)
  ~ .extensionsList
  li:has(input:checked) {
  display: none;
  opacity: 0;
  scale: 0.1;
  transition: scale 250ms ease-in-out 250ms, opacity 250ms ease-in-out 250ms,
    display 250ms allow-discrete 250ms;

  @supports (-moz-user-select: none) {
    display: grid;

    &:has([aria-checked="true"]) {
      display: none;
    }

    &.removeAnimation {
      display: none;
    }
  }

  @starting-style {
    opacity: 1;
    scale: 1;
  }
}

.extensionsList {
  --grid-max-col-count: 3;
  --grid-min-col-size: 343px;
  --grid-gap: 12px;

  --grid-col-size-calc: calc(
    (100% - var(--grid-gap) * var(--grid-max-col-count)) / var(--grid-max-col-count)
  );
  --grid-col-min-size-calc: 343px;
  --max-container-size: 1170px;
  --max-size-single-col: calc((var(--max-container-size) - var(--grid-gap) * 2) / 2);

  position: relative;
  display: grid;
  place-items: stretch;
  gap: 12px;
  grid-template-columns: repeat(
    auto-fit,
    minmax(max(var(--grid-col-min-size-calc), var(--grid-col-size-calc)), 1fr)
  );

  @container (max-width: calc((342.9px * 2) + 12px)) {
    grid-template-columns: unset;
    place-items: center;
  }

  & > .extensionItem {
    display: grid;
    padding: 20px;
    row-gap: 24px;
    border-radius: 20px;
    background-color: var(--bg-block);
    border: 1px solid var(--bor-tab);
    max-width: var(--max-size-single-col);
    width: 100%;
    grid-template-rows: 1fr;

    @container (max-width: calc((342.9px * 2) + 12px)) {
      max-width: 375px;
    }
  }

  .extensionItemHeader {
    display: flex;
    gap: 16px;
    align-items: flex-start;

    img {
      border-radius: 10px;
    }
  }

  .extensionItemContent {
    h3 {
      color: var(--txt-cl-title);
      margin-bottom: 8px;
    }

    p {
      color: var(--txt-cl-description);
    }
  }

  .extensionItemFooter {
    display: flex;
    justify-content: space-between;
    align-items: center;

    .removeBtn {
      padding: 8px 16px;
      border-radius: 999px;
      border: 1px solid var(--bor-btn);
      color: var(--txt-cl-title);
      transition: background-color 250ms ease-in-out;

      @media (hover: hover) {
        &:hover {
          cursor: pointer;
          background-color: var(--bg-hover);
        }
      }

      &:active {
        background-color: var(--bg-active);
      }

      &:focus-visible {
        outline: 2px solid var(--bg-active);
        outline-offset: 2px;
        background-color: var(--bg-hover);
      }
    }

    label:has(input:checked) {
      background-color: var(--bg-active);

      input {
        transform: translateX(100%);
      }
    }

    label {
      display: flex;
      width: 36px;
      border-radius: 999px;
      background-color: var(--bg-unchecked);
      transition: background-color 250ms ease-in-out;
      cursor: pointer;

      &:has(input:focus-visible) {
        outline: 2px solid var(--bg-active);
        outline-offset: 2px;
      }
    }

    input {
      width: 16px;
      height: 16px;
      appearance: none;
      border-radius: 9999px;
      background-color: var(--neutral-0);
      margin: 2px;
      transform: translateX(0px);
      transition: transform 250ms ease-in-out;
      cursor: pointer;

      &:focus-visible {
        outline: unset;
        border: none;
      }
    }
  }
}

.emptyState {
  display: none;
  color: var(--txt-cl-title);
}

.extensionsList:empty + .emptyState {
  display: block;
  text-align: center;
  opacity: 1;
  transition: opacity 1250ms ease-in-out 1250ms;

  @starting-style {
    opacity: 0;
  }
}
